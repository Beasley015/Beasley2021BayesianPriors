
    model{
      
    # Define hyperprior distributions: intercepts
    omega ~ dunif(0,1)
    
    #Intercepts
    mean.a0 ~ dunif(0,1)
    a0.mean <- log(mean.a0)-log(1-mean.a0)
    tau.a0 ~ dgamma(0.1, 0.1)
    
    mean.a1 ~ dunif(0,1)
    a1.mean <- log(mean.a0)-log(1-mean.a0)
    tau.a1 ~ dgamma(0.1, 0.1)
    
    mean.b0 ~ dunif(0,1)
    b0.mean <- log(mean.b0)-log(1-mean.b0)
    tau.b0 ~ dgamma(0.1, 0.1)

     #Add info for species-level priors
            lim <- c(20, 21, 22)    
            
            #Intercept information
            a0.lo1 <- a0.mean+(1/sqrt(tau.a0))
            a0.lo2 <- a0.mean-(1/sqrt(tau.a0))
            a0.lo3 <- a0.mean-(5/sqrt(tau.a0))
              
            a0.lo <- c(a0.lo3, a0.lo1, a0.lo2, a0.lo3)
            
            a0.hi1 <- a0.mean+(5/sqrt(tau.a0))
            a0.hi2 <- a0.mean+(1/sqrt(tau.a0))
            a0.hi3 <- a0.mean+(5/sqrt(tau.a0))
            
            a0.hi <- c(a0.hi3, a0.hi1, a0.hi2, a0.hi3)
            
            #Covariate information
            a1.lo1 <- a1.mean-(5/sqrt(tau.a1))
            a1.lo2 <- a1.mean-(5/sqrt(tau.a1))
            a1.lo3 <- a1.mean-(5/sqrt(tau.a1))
            
            a1.lo <- c(a1.lo3, a1.lo1, a1.lo2, a1.lo3)
            
            a1.hi1 <- a1.mean+0.001
            a1.hi2 <- a1.mean-(1/sqrt(tau.a1))
            a1.hi3 <- a1.mean+(5/sqrt(tau.a1))
            
            a1.hi <- c(a1.hi3, a1.hi1, a1.hi2, a1.hi3)

            for(i in 1:(spec+aug)){
              #Create priors from hyperpriors
              g[i] ~ dinterval(i, lim)
              
              w[i] ~ dbern(ifelse(i == 21 || i == 22, 0.25, omega))
              #indicates whether or not species is exposed to sampling 

      a0[i] ~ dnorm(a0.mean, tau.a0)T(a0.lo[g[i]+1], a0.hi[g[i]+1])

      a1[i] ~ dnorm(a1.mean, tau.a1)T(a1.lo[g[i]+1], a1.hi[g[i]+1])

      b0[i] ~ dnorm(b0.mean, tau.b0)
    
      #Estimate occupancy of species i at point j
      for (j in 1:J) {
        logit(psi[j,i]) <- a0[i] + a1[i]*cov[j]
        mu.psi[j,i] <- psi[j,i] * w[i]
        Z[j,i] ~ dbern(mu.psi[j,i])
    
        #Estimate detection of i at point j during sampling period k
        for(k in 1:K[j]){
          logit(p[j,k,i]) <-  b0[i]
          mu.p[j,k,i] <- p[j,k,i]*Z[j,i] 
          #The addition of Z means that detecting a species depends on its occupancy
          obs[j,k,i] ~ dbern(mu.p[j,k,i])
    }
    }
    }
    
    #Estimate total richness (N) by adding observed (n) and unobserved (n0) species
    n0<-sum(w[(spec+1):(spec+aug)])
    N<-spec+n0
    
    }
    
