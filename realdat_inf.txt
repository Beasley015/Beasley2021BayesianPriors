
    model{
      
    # Define hyperprior distributions: intercepts
    omega ~ dunif(0,1)
    
    #Intercepts
    mean.a0 ~ dunif(0,1)
    a0.mean <- log(mean.a0)-log(1-mean.a0)
    tau.a0 ~ dgamma(0.1, 0.1)
    
    mean.a1 ~ dunif(0,1)
    a1.mean <- log(mean.a0)-log(1-mean.a0)
    tau.a1 ~ dgamma(0.1, 0.1)
    
    mean.b0 ~ dunif(0,1)
    b0.mean <- log(mean.b0)-log(1-mean.b0)
    tau.b0 ~ dgamma(0.1, 0.1)

     #Add info for species-level priors
            
            inf.mean0 <- -1.4
            inf.mean1 <- -1
            
            inf.var0 <- 0.5
            inf.var1 <- 1
            
            det.mean <- 0.539
            det.var <- 0.5
            
            weights <- c(0.85, 0.15)
            
            lb0[2] <- weights[2]/inf.var0
            lb0[1] <- weights[1]/(1/tau.a0)
              
            lb1[1] <- weights[1]/(1/tau.a1)
            lb1[2] <- weights[2]/inf.var1
            
            lbdet[1] <- weights[1]/(1/tau.b0)
            lbdet[2] <- weights[2]/det.var
              
            pooled.var0 <- 1/sum(lb0)
            pooled.var1 <- 1/sum(lb1)
            pooled.vardet <- 1/sum(lbdet)
              
            pooled.mean0 <- sum(lb0*c(a0.mean,inf.mean0))
                               *pooled.var0
            pooled.mean1 <- sum(lb1*c(a1.mean,inf.mean1))
                               *pooled.var1
            pooled.det <- sum(lbdet*c(b0.mean,det.mean))*pooled.vardet
            
            for(i in 1:(spec+aug)){
              #Create priors from hyperpriors
              w[i] ~ dbern(omega)
              
              a0[i] ~ dnorm(ifelse(i==11, pooled.mean0, a0.mean), 
                            ifelse(i==11, (1/pooled.var0), tau.a0))
                             
              a1[i] ~ dnorm(ifelse(i==11, pooled.mean1, a1.mean), 
                            ifelse(i==11, (1/pooled.var1), tau.a1))

              b0[i] ~ dnorm(ifelse(i==11, pooled.det, b0.mean), 
                            ifelse(i==11, (1/pooled.vardet), tau.b0)) 

      #Estimate occupancy of species i at point j
      for (j in 1:J){
        logit(psi[j,i]) <- a0[i] + a1[i]*cov1[j]
        mu.psi[j,i] <- psi[j,i] * w[i]
        Z[j,i] ~ dbern(mu.psi[j,i])
    
        #Estimate detection of i at point j during sampling period k
        for(k in 1:K[j]){
          logit(p[j,k,i]) <-  b0[i]
          mu.p[j,k,i] <- p[j,k,i]*Z[j,i] 
          #The addition of Z means that detecting a species depends on its occupancy
          obs[j,k,i] ~ dbern(mu.p[j,k,i])
    }
    }
    }
    
    #Estimate total richness (N) by adding observed (n) and unobserved (n0) species
    n0<-sum(w[(spec+1):(spec+aug)])
    N<-spec+n0
    
    }
    
