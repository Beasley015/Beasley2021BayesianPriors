
    model{
    # Define hyperprior distributions: intercepts
    omega ~ dunif(0,1)
    
    mean.a0 ~ dunif(0,1)
    a0.mean <- log(mean.a0)-log(1-mean.a0)
    tau.a0 ~ dgamma(0.1, 0.1)
    
    mean.a1 ~ dunif(0,1)
    a1.mean <- log(mean.a0)-log(1-mean.a0)
    tau.a1 ~ dgamma(0.1, 0.1)
    
    mean.b0 ~ dunif(0,1)
    b0.mean <- log(mean.b0)-log(1-mean.b0)
    tau.b0 ~ dgamma(0.1, 0.1)

     #Info for species-level prior distribution
            inf.mean <- -3 #mean of distribution
            inf.var <- 0.5 #variance of distribution
            
          #Define prior weights: how much each distribution 
          #contributes to the final aggregate
          #Hyperprior first, then informed
            weights <- c(0.5, 0.5) #these are equal weights
          
          #Pool the distributions  
            lb[1] <- weights[1]/(1/tau.a0) 
            #1/tau.a0 is the variation of hyperprior
            lb[2] <- weights[2]/inf.var
            
            pooled.var <- 1/sum(lb)
            pooled.mean <- sum(lb*c(a0.mean,inf.mean))
              *pooled.var
          
            for(i in 1:(spec+aug)){
              #Create priors from hyperpriors/aggregated prior
              w[i] ~ dbern(omega) 
              #w=1 means species was available for sampling
              
              a0[i] ~ dnorm(a0.mean, tau.a0)
                             
              a1[i] ~ dnorm(ifelse(i==10,pooled.mean,a1.mean), 
                            ifelse(i==10,(1/pooled.var),tau.a1))

              b0[i] ~ dnorm(b0.mean, tau.b0) 

      #Estimate occupancy of species i at point j
      for (j in 1:J){
        logit(psi[j,i]) <- a0[i] + a1[i]*cov[j]
        Z[j,i] ~ dbern(psi[j,i]*w[i])
    
        #Estimate detection of i at point j during survey k
        for(k in 1:K[j]){
          logit(p[j,k,i]) <-  b0[i]
          obs[j,k,i] ~ dbern(p[j,k,i]*Z[j,i])
    }
    }
    }
    
    #Estimate total richness by adding observed and unobserved species
    n0<-sum(w[(spec+1):(spec+aug)])
    N<-spec+n0
    
    }
    
