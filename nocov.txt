
    model{
      # Define hyperprior distributions: intercepts
        
        omega ~ dunif(0,1)

        #Intercepts
        a0.mean ~ dnorm(0,0.001)
        sigma.a0 ~ dunif(0,10)
        tau.a0 <- 1/(sigma.a0*sigma.a0)
    
        b0.mean ~ dnorm(0,0.001)
        sigma.b0 ~ dunif(0,10)
        tau.b0 <- 1/(sigma.b0*sigma.b0)
    
        for(i in 1:nspec+naug){
          #create priors from distributions above
          w[i] ~ dbern(omega)
          #indicates whether or not species is exposed to sampling
          
          a0[i] ~ dnorm(a0.mean, tau.a0)
    
          b0[i] ~ dnorm(b0.mean, tau.b0)

        #Estimate occupancy of species i at point j
        for (j in 1:J) {
          logit(psi[j,i]) <- a0[i]
          mu.psi[j,i] <- psi[j,i]*w[i]
          Z[j,i] ~ dbern(mu.psi[j,i])

          #Estimate detection of i at point j during sampling period k
            for(k in 1:K[j]){
              logit(p[j,k,i]) <-  b0[i]
              mu.p[j,k,i] <- p[j,k,i]*Z[j,i] 
              #The addition of Z means that detecting a species depends on its occupancy
              obs[j,k,i] ~ dbern(mu.p[j,k,i])
            }
          }
        }
        
        #Estimate total richness (N) by adding observed (n) and unobserved (n0) species
        n0<-sum(w[(nspec+1):(nspec+naug)])
        N<-nspec+n0

        #Create a loop to determine point level richness estimates
        for(j in 1:J){
          Nsite[j]<- inprod(Z[j,1:(nspec+naug)],w[1:(nspec+naug)])
        }
    }
    